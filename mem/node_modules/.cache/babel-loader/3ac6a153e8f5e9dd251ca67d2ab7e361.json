{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nabil\\\\Documents\\\\Fullstack\\\\ReactJS\\\\memory\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport shuffle from 'lodash.shuffle';\nimport './App.css';\nimport Card from './Card';\nimport GuessCount from './GuessCount';\nimport HallOfFame, { FAKE_HOF } from './HallOfFame';\nconst SIDE = 6;\nconst SYMBOLS = 'üòÄüéâüíñüé©üê∂üê±ü¶Ñüê¨üåçüåõüåûüí´üçéüçåüçìüçêüçüüçø';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: this.generateCards(),\n      currentPair: [],\n      guesses: 0,\n      matchedCardIndicies: []\n    };\n\n    this.handleCardClick = card => {\n      console.log(card, 'clicked', this);\n    };\n  }\n\n  generateCards() {\n    const result = [];\n    const size = SIDE * SIDE;\n    const candidates = shuffle(SYMBOLS);\n\n    while (result.length < size) {\n      const card = candidates.pop();\n      result.push(card, card);\n    }\n\n    return shuffle(result);\n  } //Arrow fx for binding\n\n\n  render() {\n    const won = new Date().getSeconds() % 2 === 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"memory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(GuessCount, {\n      guesses: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }), this.cards.map((card, index) => /*#__PURE__*/React.createElement(Card, {\n      card: card,\n      feedback: \"visible\",\n      key: index,\n      onClick: this.handleCardClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    })), won && /*#__PURE__*/React.createElement(HallOfFame, {\n      entries: FAKE_HOF,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Nabil/Documents/Fullstack/ReactJS/memory/src/App.js"],"names":["React","Component","shuffle","Card","GuessCount","HallOfFame","FAKE_HOF","SIDE","SYMBOLS","App","state","cards","generateCards","currentPair","guesses","matchedCardIndicies","handleCardClick","card","console","log","result","size","candidates","length","pop","push","render","won","Date","getSeconds","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,IAAqBC,QAArB,QAAqC,cAArC;AAEA,MAAMC,IAAI,GAAG,CAAb;AACA,MAAMC,OAAO,GAAG,sCAAhB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AAERC,MAAAA,KAAK,EAAE,KAAKC,aAAL,EAFC;AAGRC,MAAAA,WAAW,EAAE,EAHL;AAIRC,MAAAA,OAAO,EAAE,CAJD;AAKRC,MAAAA,mBAAmB,EAAE;AALb,KADkB;;AAAA,SAqB1BC,eArB0B,GAqBPC,IAAD,IAAU;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,SAAlB,EAA6B,IAA7B;AACD,KAvByB;AAAA;;AAS1BL,EAAAA,aAAa,GAAG;AACd,UAAMQ,MAAM,GAAG,EAAf;AACA,UAAMC,IAAI,GAAGd,IAAI,GAAGA,IAApB;AACA,UAAMe,UAAU,GAAGpB,OAAO,CAACM,OAAD,CAA1B;;AACA,WAAOY,MAAM,CAACG,MAAP,GAAgBF,IAAvB,EAA6B;AAC3B,YAAMJ,IAAI,GAAGK,UAAU,CAACE,GAAX,EAAb;AACAJ,MAAAA,MAAM,CAACK,IAAP,CAAYR,IAAZ,EAAkBA,IAAlB;AACD;;AACD,WAAOf,OAAO,CAACkB,MAAD,CAAd;AACD,GAlByB,CAoB1B;;;AAIAM,EAAAA,MAAM,GAAG;AACP,UAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,UAAX,KAA0B,CAA1B,KAAgC,CAA5C;AACA,wBACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKlB,KAAL,CAAWmB,GAAX,CAAe,CAACb,IAAD,EAAOc,KAAP,kBACd,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEd,IAAZ;AAAkB,MAAA,QAAQ,EAAC,SAA3B;AAAqC,MAAA,GAAG,EAAEc,KAA1C;AAAiD,MAAA,OAAO,EAAE,KAAKf,eAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,EAKGW,GAAG,iBAAI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAErB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALV,CADA;AASD;;AAnCyB;;AAsC5B,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport shuffle from 'lodash.shuffle'\n\nimport './App.css'\n\nimport Card from './Card'\nimport GuessCount from './GuessCount'\nimport HallOfFame, { FAKE_HOF } from './HallOfFame'\n\nconst SIDE = 6\nconst SYMBOLS = 'üòÄüéâüíñüé©üê∂üê±ü¶Ñüê¨üåçüåõüåûüí´üçéüçåüçìüçêüçüüçø'\n\nclass App extends Component {\n  state = {\n    \n  cards: this.generateCards(),\n  currentPair: [],\n  guesses: 0,\n  matchedCardIndicies: []\n  }\n\n  generateCards() {\n    const result = []\n    const size = SIDE * SIDE\n    const candidates = shuffle(SYMBOLS)\n    while (result.length < size) {\n      const card = candidates.pop()\n      result.push(card, card)\n    }\n    return shuffle(result)\n  }\n\n  //Arrow fx for binding\n  handleCardClick = (card) => {\n    console.log(card, 'clicked', this)\n  }\n  render() {\n    const won = new Date().getSeconds() % 2 === 0\n    return (\n    <div className=\"memory\">\n      <GuessCount guesses={0} />\n      {this.cards.map((card, index) => (\n        <Card card={card} feedback=\"visible\" key={index} onClick={this.handleCardClick}/>\n      ))}\n      {won && <HallOfFame entries={FAKE_HOF}/>}\n    </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}