{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nabil\\\\Documents\\\\Fullstack\\\\ReactJS\\\\cours\\\\formation\\\\memory\\\\src\\\\HallOfFame.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './HallOfFame.css';\n\nconst HallOfFame = ({\n  entries\n}) => /*#__PURE__*/React.createElement(\"table\", {\n  className: \"hallOfFame\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"tbody\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, entries.map(({\n  id,\n  date,\n  guesses,\n  player\n}) => /*#__PURE__*/React.createElement(\"tr\", {\n  key: id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  className: \"date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 11\n  }\n}, date), /*#__PURE__*/React.createElement(\"td\", {\n  className: \"guesses\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 11\n  }\n}, guesses), /*#__PURE__*/React.createElement(\"td\", {\n  className: \"player\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 11\n  }\n}, player)))));\n\nHallOfFame.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    date: PropTypes.string.isRequired,\n    guesses: PropTypes.number.isRequired,\n    player: PropTypes.string.isRequired\n  })).isRequired\n};\nexport default HallOfFame; // == Internal helpers ==============================================\n\nexport const FAKE_HOF = [{\n  id: 3,\n  guesses: 18,\n  date: '10/10/2017',\n  player: 'Jane'\n}, {\n  id: 2,\n  guesses: 23,\n  date: '11/10/2017',\n  player: 'Kevin'\n}, {\n  id: 1,\n  guesses: 31,\n  date: '06/10/2017',\n  player: 'Louisa'\n}, {\n  id: 0,\n  guesses: 48,\n  date: '14/10/2017',\n  player: 'Marc'\n}];\nconst HOF_KEY = '::Memory::HallofFame';\nconst HOF_MAX_SIZE = 10;\nexport function saveHOFEntry(entry, onStored) {\n  entry.date = new Date().toLocaleDateString();\n  entry.id = Date.now();\n  const entries = JSON.parse(localStorage.getItem(HOF_KEY) || '[]');\n  const insertionPoint = entries.findIndex(({\n    guesses\n  }) => guesses >= entry.guesses);\n\n  if (insertionPoint === -1) {\n    entries.push(entry);\n  } else {\n    entries.splice(insertionPoint, 0, entry);\n  }\n\n  if (entries.length > HOF_MAX_SIZE) {\n    entries.splice(HOF_MAX_SIZE, entries.length);\n  }\n\n  localStorage.setItem(HOF_KEY, JSON.stringify(entries));\n  onStored(entries);\n}","map":{"version":3,"sources":["C:/Users/Nabil/Documents/Fullstack/ReactJS/cours/formation/memory/src/HallOfFame.js"],"names":["React","PropTypes","HallOfFame","entries","map","id","date","guesses","player","propTypes","arrayOf","shape","number","isRequired","string","FAKE_HOF","HOF_KEY","HOF_MAX_SIZE","saveHOFEntry","entry","onStored","Date","toLocaleDateString","now","JSON","parse","localStorage","getItem","insertionPoint","findIndex","push","splice","length","setItem","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACjB;AAAO,EAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,OAAO,CAACC,GAAR,CAAY,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA,IAAL;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA;AAApB,CAAD,kBACX;AAAI,EAAA,GAAG,EAAEH,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAI,EAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAsBC,IAAtB,CADF,eAEE;AAAI,EAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAyBC,OAAzB,CAFF,eAGE;AAAI,EAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwBC,MAAxB,CAHF,CADD,CADH,CADF,CADF;;AAcAN,UAAU,CAACO,SAAX,GAAuB;AACrBN,EAAAA,OAAO,EAAEF,SAAS,CAACS,OAAV,CACPT,SAAS,CAACU,KAAV,CAAgB;AACdN,IAAAA,EAAE,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UADP;AAEdP,IAAAA,IAAI,EAAEL,SAAS,CAACa,MAAV,CAAiBD,UAFT;AAGdN,IAAAA,OAAO,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UAHZ;AAIdL,IAAAA,MAAM,EAAEP,SAAS,CAACa,MAAV,CAAiBD;AAJX,GAAhB,CADO,EAOPA;AARmB,CAAvB;AAWA,eAAeX,UAAf,C,CAEA;;AAEA,OAAO,MAAMa,QAAQ,GAAG,CACtB;AAAEV,EAAAA,EAAE,EAAE,CAAN;AAASE,EAAAA,OAAO,EAAE,EAAlB;AAAsBD,EAAAA,IAAI,EAAE,YAA5B;AAA0CE,EAAAA,MAAM,EAAE;AAAlD,CADsB,EAEtB;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASE,EAAAA,OAAO,EAAE,EAAlB;AAAsBD,EAAAA,IAAI,EAAE,YAA5B;AAA0CE,EAAAA,MAAM,EAAE;AAAlD,CAFsB,EAGtB;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASE,EAAAA,OAAO,EAAE,EAAlB;AAAsBD,EAAAA,IAAI,EAAE,YAA5B;AAA0CE,EAAAA,MAAM,EAAE;AAAlD,CAHsB,EAItB;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASE,EAAAA,OAAO,EAAE,EAAlB;AAAsBD,EAAAA,IAAI,EAAE,YAA5B;AAA0CE,EAAAA,MAAM,EAAE;AAAlD,CAJsB,CAAjB;AAOP,MAAMQ,OAAO,GAAG,sBAAhB;AACA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuC;AAC5CD,EAAAA,KAAK,CAACb,IAAN,GAAa,IAAIe,IAAJ,GAAWC,kBAAX,EAAb;AACAH,EAAAA,KAAK,CAACd,EAAN,GAAWgB,IAAI,CAACE,GAAL,EAAX;AAEA,QAAMpB,OAAO,GAAGqB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBX,OAArB,KAAiC,IAA5C,CAAhB;AACA,QAAMY,cAAc,GAAGzB,OAAO,CAAC0B,SAAR,CACrB,CAAC;AAAEtB,IAAAA;AAAF,GAAD,KAAiBA,OAAO,IAAIY,KAAK,CAACZ,OADb,CAAvB;;AAIA,MAAIqB,cAAc,KAAK,CAAC,CAAxB,EAA2B;AACzBzB,IAAAA,OAAO,CAAC2B,IAAR,CAAaX,KAAb;AACD,GAFD,MAEO;AACLhB,IAAAA,OAAO,CAAC4B,MAAR,CAAeH,cAAf,EAA+B,CAA/B,EAAkCT,KAAlC;AACD;;AACD,MAAIhB,OAAO,CAAC6B,MAAR,GAAiBf,YAArB,EAAmC;AACjCd,IAAAA,OAAO,CAAC4B,MAAR,CAAed,YAAf,EAA6Bd,OAAO,CAAC6B,MAArC;AACD;;AAEDN,EAAAA,YAAY,CAACO,OAAb,CAAqBjB,OAArB,EAA8BQ,IAAI,CAACU,SAAL,CAAe/B,OAAf,CAA9B;AACAiB,EAAAA,QAAQ,CAACjB,OAAD,CAAR;AACD","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './HallOfFame.css'\r\n\r\nconst HallOfFame = ({ entries }) => (\r\n  <table className=\"hallOfFame\">\r\n    <tbody>\r\n      {entries.map(({id, date, guesses, player}) => (\r\n        <tr key={id}>\r\n          <td className=\"date\">{date}</td>\r\n          <td className=\"guesses\">{guesses}</td>\r\n          <td className=\"player\">{player}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n)\r\n\r\nHallOfFame.propTypes = {\r\n  entries: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      date: PropTypes.string.isRequired,\r\n      guesses: PropTypes.number.isRequired,\r\n      player: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n}\r\n\r\nexport default HallOfFame\r\n\r\n// == Internal helpers ==============================================\r\n\r\nexport const FAKE_HOF = [\r\n  { id: 3, guesses: 18, date: '10/10/2017', player: 'Jane' },\r\n  { id: 2, guesses: 23, date: '11/10/2017', player: 'Kevin' },\r\n  { id: 1, guesses: 31, date: '06/10/2017', player: 'Louisa' },\r\n  { id: 0, guesses: 48, date: '14/10/2017', player: 'Marc' },\r\n]\r\n\r\nconst HOF_KEY = '::Memory::HallofFame'\r\nconst HOF_MAX_SIZE = 10\r\n\r\nexport function saveHOFEntry(entry, onStored) {\r\n  entry.date = new Date().toLocaleDateString()\r\n  entry.id = Date.now()\r\n\r\n  const entries = JSON.parse(localStorage.getItem(HOF_KEY) || '[]')\r\n  const insertionPoint = entries.findIndex(\r\n    ({ guesses }) => guesses >= entry.guesses\r\n  )\r\n\r\n  if (insertionPoint === -1) {\r\n    entries.push(entry)\r\n  } else {\r\n    entries.splice(insertionPoint, 0, entry)\r\n  }\r\n  if (entries.length > HOF_MAX_SIZE) {\r\n    entries.splice(HOF_MAX_SIZE, entries.length)\r\n  }\r\n\r\n  localStorage.setItem(HOF_KEY, JSON.stringify(entries))\r\n  onStored(entries)\r\n}"]},"metadata":{},"sourceType":"module"}